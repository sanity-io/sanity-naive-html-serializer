name: CI & Release
on:
  # Build on pushes to release branches
  push:
    branches: []
  # Build on pull requests targeting release branches
  pull_request:
    branches: []
  workflow_dispatch:
    inputs:
      release:
        description: Release new version
        required: true
        default: false
        type: boolean

jobs:
  build:
    name: Lint & Build
    runs-on: ubuntu-latest
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run prepublishOnly

  test:
    name: Test
    needs: build
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node: [lts/*, current]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - run: npm ci
      - run: npm test --if-present

  release:
    name: Semantic release
    needs: test
    runs-on: ubuntu-latest
    # only run if opt-in during workflow_dispatch
    if: inputs.release == true
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.ECOSPARK_APP_ID }}
          private-key: ${{ secrets.ECOSPARK_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          # Need to fetch entire commit history to
          # analyze every commit since last release
          fetch-depth: 0
          # Uses generated token to allow pushing commits back
          token: ${{ steps.app-token.outputs.token }}
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
      - run: npm ci
        # Branches that will release new versions are defined in .releaserc.json
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
